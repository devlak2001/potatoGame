{"version":3,"file":"component---src-pages-index-js-513260ca06f4576f23dc.js","mappings":"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","sources":["webpack://potato-peeler/./src/pages/index.js","webpack://potato-peeler/./node_modules/howler/dist/howler.js","webpack://potato-peeler/./node_modules/react-icons/lib/iconsManifest.mjs","webpack://potato-peeler/./node_modules/react-icons/lib/iconContext.mjs","webpack://potato-peeler/./node_modules/react-icons/lib/iconBase.mjs"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FaPause } from \"react-icons/fa\";\r\nimport { Howl } from \"howler\";\r\nimport { GiSoundOff, GiSoundOn } from \"react-icons/gi\";\r\n\r\nimport \"./../styles/index.scss\";\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nconst potatoTapSound = new Howl({\r\n  src: [\r\n    \"https://devlak2001.s3.eu-central-1.amazonaws.com/potatoPeeler/potatoTap.mp3\",\r\n  ],\r\n});\r\n\r\nconst potatoCollectedSound = new Howl({\r\n  src: [\r\n    \"https://devlak2001.s3.eu-central-1.amazonaws.com/potatoPeeler/collectedSound.mp3\",\r\n  ],\r\n});\r\n\r\nconst gameBackgroundSound = new Howl({\r\n  src: [\r\n    \"https://devlak2001.s3.eu-central-1.amazonaws.com/potatoPeeler/gameBackground.mp3\",\r\n  ],\r\n  loop: true,\r\n});\r\n\r\npotatoTapSound.volume(0);\r\ngameBackgroundSound.volume(0);\r\npotatoCollectedSound.volume(0);\r\n\r\nconst IndexPage = () => {\r\n  const gameWrapper = useRef(null);\r\n  const staticFriesImg = useRef(null);\r\n  const paused = useRef(false);\r\n  const [gamePuased, setGamePuased] = useState(false);\r\n  const lastPauseTimestamp = useRef(undefined);\r\n  const timePaused = useRef(0);\r\n  const [score, setScore] = useState(\"0000\");\r\n  const potatoesNumberRef = useRef(500);\r\n  const [potatoesNumber, setPotatoesNumber] = useState(\r\n    potatoesNumberRef.current.toString()\r\n  );\r\n  const [muted, setMuted] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let start = Date.now(),\r\n      potatoFallingDuration = 10000,\r\n      potatoRows = gameWrapper.current.querySelectorAll(\".potatoRow\");\r\n\r\n    document.addEventListener(\"gesturestart\", function (e) {\r\n      e.preventDefault();\r\n    });\r\n\r\n    document.addEventListener(\"visibilitychange\", () => {\r\n      if (document.hidden && !paused.current) {\r\n        paused.current = true;\r\n        lastPauseTimestamp.current = Date.now();\r\n        setGamePuased(() => true);\r\n      }\r\n    });\r\n\r\n    window.addEventListener(\"blur\", () => {\r\n      if (!paused.current) {\r\n        paused.current = true;\r\n        lastPauseTimestamp.current = Date.now();\r\n        setGamePuased(() => true);\r\n      }\r\n    });\r\n\r\n    const peelers = gameWrapper.current.querySelectorAll(\".peelers div\");\r\n\r\n    const peelersOffsetTop =\r\n      gameWrapper.current.querySelector(\".peelers\").offsetTop;\r\n    const peelersHeight =\r\n      gameWrapper.current.querySelector(\".peelers\").clientHeight;\r\n\r\n    function numberTransition(start, end, duration) {\r\n      const interval = 10; // Interval in milliseconds\r\n      const steps = duration / interval;\r\n      const stepValue = (end - start) / steps;\r\n\r\n      let stepCount = 0;\r\n\r\n      const transitionInterval = setInterval(() => {\r\n        if (!paused.current) {\r\n          potatoFallingDuration += stepValue;\r\n          stepCount++;\r\n\r\n          if (stepCount >= steps) {\r\n            clearInterval(transitionInterval);\r\n          }\r\n        }\r\n      }, interval);\r\n    }\r\n\r\n    numberTransition(potatoFallingDuration, 2500, 30000);\r\n\r\n    function generatePotatoes(elapsedTime) {\r\n      const potatoRow = document.createElement(\"div\");\r\n      potatoRow.dataset.elapsedTime = elapsedTime.toString();\r\n      potatoRow.className = \"potatoRow\";\r\n      potatoRow.style.bottom = `${\r\n        window.innerHeight - window.innerWidth * 0.115 - 32\r\n      }px`;\r\n\r\n      const numPotatoes = Math.random() < 0.5 ? 1 : 2;\r\n      const columns = [1, 2, 3];\r\n      for (let i = 0; i < numPotatoes && potatoesNumberRef.current > 0; i++) {\r\n        const randomIndex = Math.floor(Math.random() * columns.length);\r\n\r\n        const potato = document.createElement(\"div\");\r\n        potato.style.gridColumn = `${columns[randomIndex]}`;\r\n        potato.dataset.column = `${columns[randomIndex]}`;\r\n        potato.className = \"potato\";\r\n        potatoRow.append(potato);\r\n\r\n        potatoesNumberRef.current--;\r\n        setPotatoesNumber(\r\n          potatoesNumberRef.current.toString().padStart(3, \"0\")\r\n        );\r\n\r\n        columns.splice(randomIndex, 1);\r\n      }\r\n      gameWrapper.current.prepend(potatoRow);\r\n      potatoRows = gameWrapper.current.querySelectorAll(\".potatoRow\");\r\n    }\r\n\r\n    gameWrapper.current.addEventListener(\"touchstart\", potatoOnTouchStart);\r\n\r\n    function potatoOnTouchStart(e) {\r\n      e.preventDefault();\r\n\r\n      const currentTarget = e.target;\r\n      if (\r\n        e.target.classList.contains(\"potato\") &&\r\n        currentTarget.getBoundingClientRect().top + currentTarget.clientHeight >\r\n          peelersOffsetTop &&\r\n        currentTarget.getBoundingClientRect().top <\r\n          peelersOffsetTop + peelersHeight\r\n      ) {\r\n        potatoTapSound.play();\r\n        currentTarget.classList.add(\"clicked\");\r\n        peelers[parseInt(currentTarget.dataset.column) - 1].style.animation =\r\n          \"none\";\r\n        console.log(currentTarget.clientHeight);\r\n        peelers[parseInt(currentTarget.dataset.column) - 1].style.animation =\r\n          \"peeling 0.4s ease\";\r\n\r\n        const scoreIncrementIndicator = document.createElement(\"div\");\r\n        scoreIncrementIndicator.textContent = \"+10\";\r\n        scoreIncrementIndicator.className = \"scoreIncrementIndicator\";\r\n        gameWrapper.current.append(scoreIncrementIndicator);\r\n        scoreIncrementIndicator.style.top = `${\r\n          e.changedTouches[0].clientY - scoreIncrementIndicator.clientHeight / 2\r\n        }px`;\r\n        scoreIncrementIndicator.style.left = `${\r\n          e.changedTouches[0].clientX - scoreIncrementIndicator.clientWidth / 2\r\n        }px`;\r\n        setTimeout(() => {\r\n          const clockwise = Math.random() < 0.5 ? 1 : -1;\r\n          scoreIncrementIndicator.style.transform = `translateY(-${\r\n            100 + randomIntFromInterval(0, 50)\r\n          }%) scale(${1 + randomIntFromInterval(0, 50) / 100}) rotate(${\r\n            clockwise * Math.floor(Math.random() * 45)\r\n          }deg)`;\r\n          scoreIncrementIndicator.style.opacity = \"0\";\r\n        }, 0);\r\n\r\n        const friesIncrementIndicator = document.createElement(\"img\");\r\n        friesIncrementIndicator.src =\r\n          \"https://devlak2001.s3.eu-central-1.amazonaws.com/potatoPeeler/fries.png\";\r\n        friesIncrementIndicator.className = \"friesIncrementIndicator\";\r\n        gameWrapper.current.append(friesIncrementIndicator);\r\n\r\n        animateElementInArc(\r\n          friesIncrementIndicator,\r\n          e.changedTouches[0].clientX - scoreIncrementIndicator.clientWidth / 2,\r\n          e.changedTouches[0].clientY -\r\n            scoreIncrementIndicator.clientHeight / 2,\r\n          staticFriesImg.current.getBoundingClientRect().left,\r\n          staticFriesImg.current.getBoundingClientRect().top,\r\n          1000\r\n        );\r\n\r\n        friesIncrementIndicator.onanimationend = (e) => {\r\n          if (e.animationName === \"friesIncrementIndicatorPulse\") {\r\n            gameWrapper.current.removeChild(friesIncrementIndicator);\r\n            gameWrapper.current.removeChild(scoreIncrementIndicator);\r\n          }\r\n        };\r\n\r\n        friesIncrementIndicator.onanimationstart = (e) => {\r\n          if (e.animationName === \"friesIncrementIndicatorPulse\") {\r\n            potatoCollectedSound.play();\r\n            setScore((score) =>\r\n              (Number(score) + 10).toString().padStart(4, \"0\")\r\n            );\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    function animateElementInArc(\r\n      element,\r\n      startX,\r\n      startY,\r\n      endX,\r\n      endY,\r\n      duration\r\n    ) {\r\n      const controlX = randomIntFromInterval(0, window.innerWidth);\r\n      const controlY = randomIntFromInterval(startY, endY);\r\n\r\n      const startTime = Date.now();\r\n\r\n      function animate() {\r\n        const currentTime = Date.now();\r\n        const elapsedTime = currentTime - startTime;\r\n        const progress = Math.min(elapsedTime / duration, 1);\r\n\r\n        const currentX = quadraticBezier(startX, controlX, endX, progress);\r\n        const currentY = quadraticBezier(startY, controlY, endY, progress);\r\n\r\n        element.style.top = currentY + \"px\";\r\n        element.style.left = currentX + \"px\";\r\n\r\n        if (progress < 1) {\r\n          requestAnimationFrame(animate);\r\n        }\r\n      }\r\n\r\n      function quadraticBezier(start, control, end, t) {\r\n        return (\r\n          Math.pow(1 - t, 2) * start +\r\n          2 * (1 - t) * t * control +\r\n          Math.pow(t, 2) * end\r\n        );\r\n      }\r\n\r\n      animate();\r\n    }\r\n\r\n    function step() {\r\n      if (!paused.current) {\r\n        const elapsed = Date.now() - start - timePaused.current;\r\n\r\n        potatoRows.forEach((el) => {\r\n          const value =\r\n            (elapsed - el.dataset.elapsedTime) / potatoFallingDuration;\r\n          if (value < 1) {\r\n            el.style.bottom = `${\r\n              window.innerHeight -\r\n              window.innerWidth * 0.115 -\r\n              32 -\r\n              (window.innerHeight + window.innerWidth / 3) * value\r\n            }px`;\r\n          }\r\n        });\r\n\r\n        if (potatoRows[0].offsetTop > window.innerWidth * 0.115 + 32) {\r\n          generatePotatoes(elapsed);\r\n        }\r\n\r\n        if (potatoRows[potatoRows.length - 1].offsetTop > window.innerHeight) {\r\n          gameWrapper.current.removeChild(potatoRows[potatoRows.length - 1]);\r\n        }\r\n      }\r\n      requestAnimationFrame(step);\r\n    }\r\n\r\n    generatePotatoes(0);\r\n    requestAnimationFrame(step);\r\n  }, [setScore]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"minigame\">\r\n        <div className=\"topBar\">\r\n          <button\r\n            className=\"muteButton\"\r\n            onClick={() => {\r\n              if (muted) {\r\n                potatoTapSound.volume(1);\r\n                gameBackgroundSound.volume(1);\r\n                potatoCollectedSound.volume(1);\r\n\r\n                if (!gameBackgroundSound.playing()) {\r\n                  gameBackgroundSound.play();\r\n                }\r\n              } else {\r\n                potatoTapSound.volume(0);\r\n                gameBackgroundSound.volume(0);\r\n                potatoCollectedSound.volume(0);\r\n              }\r\n              setMuted(!muted);\r\n            }}\r\n          >\r\n            {muted ? <GiSoundOff /> : <GiSoundOn />}\r\n          </button>\r\n          <div className=\"score\">\r\n            <img\r\n              ref={staticFriesImg}\r\n              src=\"https://devlak2001.s3.eu-central-1.amazonaws.com/potatoPeeler/fries.png\"\r\n            />\r\n            <div className=\"digitsWrapper\">\r\n              <AnimatedNumber number={score} />\r\n            </div>\r\n          </div>\r\n          <div className=\"potatoesNumber\">\r\n            <img src=\"https://devlak2001.s3.eu-central-1.amazonaws.com/potatoPeeler/potato.png\" />\r\n            <div className=\"digitsWrapper\">\r\n              <AnimatedNumber number={potatoesNumber} />\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"pauseButton\"\r\n            onClick={() => {\r\n              paused.current = true;\r\n              lastPauseTimestamp.current = Date.now();\r\n              setGamePuased(true);\r\n            }}\r\n          >\r\n            <FaPause />\r\n          </button>\r\n        </div>\r\n        <button className=\"potatoGame\" ref={gameWrapper}>\r\n          <div className=\"peelers\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </button>\r\n        {gamePuased && (\r\n          <div className=\"pausePopup\">\r\n            <div>\r\n              <button\r\n                onClick={() => {\r\n                  paused.current = false;\r\n                  timePaused.current += Date.now() - lastPauseTimestamp.current;\r\n                  setGamePuased(false);\r\n                }}\r\n              >\r\n                CONTINUE\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AnimatedNumber = ({ number }) => {\r\n  return (\r\n    <>\r\n      {Array.from(number).map((digit) => (\r\n        <div\r\n          className=\"digits\"\r\n          style={{\r\n            transform: `translateY(-${(digit / 10) * 100}%)`,\r\n          }}\r\n        >\r\n          <div>\r\n            <span>0</span>\r\n          </div>\r\n          <div>\r\n            <span>1</span>\r\n          </div>\r\n          <div>\r\n            <span>2</span>\r\n          </div>\r\n          <div>\r\n            <span>3</span>\r\n          </div>\r\n          <div>\r\n            <span>4</span>\r\n          </div>\r\n          <div>\r\n            <span>5</span>\r\n          </div>\r\n          <div>\r\n            <span>6</span>\r\n          </div>\r\n          <div>\r\n            <span>7</span>\r\n          </div>\r\n          <div>\r\n            <span>8</span>\r\n          </div>\r\n          <div>\r\n            <span>9</span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const Head = () => (\r\n  <>\r\n    <meta\r\n      name=\"viewport\"\r\n      content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\"\r\n    />\r\n    <link\r\n      rel=\"preload\"\r\n      as=\"image\"\r\n      href=\"https://devlak2001.s3.eu-central-1.amazonaws.com/potatoPeeler/potato.png\"\r\n    ></link>\r\n    <link\r\n      rel=\"preload\"\r\n      as=\"image\"\r\n      href=\"https://devlak2001.s3.eu-central-1.amazonaws.com/potatoPeeler/fries.png\"\r\n    ></link>\r\n    <link\r\n      rel=\"preload\"\r\n      as=\"audio\"\r\n      href=\"https://devlak2001.s3.eu-central-1.amazonaws.com/potatoPeeler/gameBackground.mp3\"\r\n    ></link>\r\n    <title>Home Page</title>\r\n  </>\r\n);\r\n","/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","export var IconsManifest = [\n  {\n    \"id\": \"ci\",\n    \"name\": \"Circum Icons\",\n    \"projectUrl\": \"https://circumicons.com/\",\n    \"license\": \"MPL-2.0 license\",\n    \"licenseUrl\": \"https://github.com/Klarr-Agency/Circum-Icons/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"fa\",\n    \"name\": \"Font Awesome 5\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"fa6\",\n    \"name\": \"Font Awesome 6\",\n    \"projectUrl\": \"https://fontawesome.com/\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"io\",\n    \"name\": \"Ionicons 4\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"io5\",\n    \"name\": \"Ionicons 5\",\n    \"projectUrl\": \"https://ionicons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/ionic-team/ionicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"md\",\n    \"name\": \"Material Design icons\",\n    \"projectUrl\": \"http://google.github.io/material-design-icons/\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"https://github.com/google/material-design-icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"ti\",\n    \"name\": \"Typicons\",\n    \"projectUrl\": \"http://s-ings.com/typicons/\",\n    \"license\": \"CC BY-SA 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by-sa/3.0/\"\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Github Octicons icons\",\n    \"projectUrl\": \"https://octicons.github.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/primer/octicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"fi\",\n    \"name\": \"Feather\",\n    \"projectUrl\": \"https://feathericons.com/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/feathericons/feather/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"lu\",\n    \"name\": \"Lucide\",\n    \"projectUrl\": \"https://lucide.dev/\",\n    \"license\": \"ISC\",\n    \"licenseUrl\": \"https://github.com/lucide-icons/lucide/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"gi\",\n    \"name\": \"Game Icons\",\n    \"projectUrl\": \"https://game-icons.net/\",\n    \"license\": \"CC BY 3.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/3.0/\"\n  },\n  {\n    \"id\": \"wi\",\n    \"name\": \"Weather Icons\",\n    \"projectUrl\": \"https://erikflowers.github.io/weather-icons/\",\n    \"license\": \"SIL OFL 1.1\",\n    \"licenseUrl\": \"http://scripts.sil.org/OFL\"\n  },\n  {\n    \"id\": \"di\",\n    \"name\": \"Devicons\",\n    \"projectUrl\": \"https://vorillaz.github.io/devicons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ai\",\n    \"name\": \"Ant Design Icons\",\n    \"projectUrl\": \"https://github.com/ant-design/ant-design-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"bs\",\n    \"name\": \"Bootstrap Icons\",\n    \"projectUrl\": \"https://github.com/twbs/icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"ri\",\n    \"name\": \"Remix Icon\",\n    \"projectUrl\": \"https://github.com/Remix-Design/RemixIcon\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"fc\",\n    \"name\": \"Flat Color Icons\",\n    \"projectUrl\": \"https://github.com/icons8/flat-color-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"gr\",\n    \"name\": \"Grommet-Icons\",\n    \"projectUrl\": \"https://github.com/grommet/grommet-icons\",\n    \"license\": \"Apache License Version 2.0\",\n    \"licenseUrl\": \"http://www.apache.org/licenses/\"\n  },\n  {\n    \"id\": \"hi\",\n    \"name\": \"Heroicons\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"hi2\",\n    \"name\": \"Heroicons 2\",\n    \"projectUrl\": \"https://github.com/tailwindlabs/heroicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"si\",\n    \"name\": \"Simple Icons\",\n    \"projectUrl\": \"https://simpleicons.org/\",\n    \"license\": \"CC0 1.0 Universal\",\n    \"licenseUrl\": \"https://creativecommons.org/publicdomain/zero/1.0/\"\n  },\n  {\n    \"id\": \"sl\",\n    \"name\": \"Simple Line Icons\",\n    \"projectUrl\": \"https://thesabbir.github.io/simple-line-icons/\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"im\",\n    \"name\": \"IcoMoon Free\",\n    \"projectUrl\": \"https://github.com/Keyamoon/IcoMoon-Free\",\n    \"license\": \"CC BY 4.0 License\",\n    \"licenseUrl\": \"https://github.com/Keyamoon/IcoMoon-Free/blob/master/License.txt\"\n  },\n  {\n    \"id\": \"bi\",\n    \"name\": \"BoxIcons\",\n    \"projectUrl\": \"https://github.com/atisawd/boxicons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/atisawd/boxicons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"cg\",\n    \"name\": \"css.gg\",\n    \"projectUrl\": \"https://github.com/astrit/css.gg\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"vsc\",\n    \"name\": \"VS Code Icons\",\n    \"projectUrl\": \"https://github.com/microsoft/vscode-codicons\",\n    \"license\": \"CC BY 4.0\",\n    \"licenseUrl\": \"https://creativecommons.org/licenses/by/4.0/\"\n  },\n  {\n    \"id\": \"tb\",\n    \"name\": \"Tabler Icons\",\n    \"projectUrl\": \"https://github.com/tabler/tabler-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://opensource.org/licenses/MIT\"\n  },\n  {\n    \"id\": \"tfi\",\n    \"name\": \"Themify Icons\",\n    \"projectUrl\": \"https://github.com/lykmapipo/themify-icons\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/thecreation/standard-icons/blob/master/modules/themify-icons/LICENSE\"\n  },\n  {\n    \"id\": \"rx\",\n    \"name\": \"Radix Icons\",\n    \"projectUrl\": \"https://icons.radix-ui.com\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/radix-ui/icons/blob/master/LICENSE\"\n  },\n  {\n    \"id\": \"pi\",\n    \"name\": \"Phosphor Icons\",\n    \"projectUrl\": \"https://github.com/phosphor-icons/core\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/phosphor-icons/core/blob/main/LICENSE\"\n  },\n  {\n    \"id\": \"lia\",\n    \"name\": \"Icons8 Line Awesome\",\n    \"projectUrl\": \"https://icons8.com/line-awesome\",\n    \"license\": \"MIT\",\n    \"licenseUrl\": \"https://github.com/icons8/line-awesome/blob/master/LICENSE.md\"\n  }\n]","import React from \"react\";\nexport var DefaultContext = {\n  color: undefined,\n  size: undefined,\n  className: undefined,\n  style: undefined,\n  attr: undefined\n};\nexport var IconContext = React.createContext && /*#__PURE__*/React.createContext(DefaultContext);","var _excluded = [\"attr\", \"size\", \"title\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport React from \"react\";\nimport { IconContext, DefaultContext } from \"./iconContext.mjs\";\nfunction Tree2Element(tree) {\n  return tree && tree.map((node, i) => /*#__PURE__*/React.createElement(node.tag, _objectSpread({\n    key: i\n  }, node.attr), Tree2Element(node.child)));\n}\nexport function GenIcon(data) {\n  // eslint-disable-next-line react/display-name\n  return props => /*#__PURE__*/React.createElement(IconBase, _extends({\n    attr: _objectSpread({}, data.attr)\n  }, props), Tree2Element(data.child));\n}\nexport function IconBase(props) {\n  var elem = conf => {\n    var {\n        attr,\n        size,\n        title\n      } = props,\n      svgProps = _objectWithoutProperties(props, _excluded);\n    var computedSize = size || conf.size || \"1em\";\n    var className;\n    if (conf.className) className = conf.className;\n    if (props.className) className = (className ? className + \" \" : \"\") + props.className;\n    return /*#__PURE__*/React.createElement(\"svg\", _extends({\n      stroke: \"currentColor\",\n      fill: \"currentColor\",\n      strokeWidth: \"0\"\n    }, conf.attr, attr, svgProps, {\n      className: className,\n      style: _objectSpread(_objectSpread({\n        color: props.color || conf.color\n      }, conf.style), props.style),\n      height: computedSize,\n      width: computedSize,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }), title && /*#__PURE__*/React.createElement(\"title\", null, title), props.children);\n  };\n  return IconContext !== undefined ? /*#__PURE__*/React.createElement(IconContext.Consumer, null, conf => elem(conf)) : elem(DefaultContext);\n}"],"names":["randomIntFromInterval","min","max","Math","floor","random","potatoTapSound","Howl","src","potatoCollectedSound","gameBackgroundSound","loop","volume","AnimatedNumber","number","Array","from","map","digit","className","style","transform","gameWrapper","useRef","staticFriesImg","paused","gamePuased","setGamePuased","useState","lastPauseTimestamp","undefined","timePaused","score","setScore","potatoesNumberRef","potatoesNumber","setPotatoesNumber","current","toString","muted","setMuted","useEffect","start","Date","now","potatoFallingDuration","potatoRows","querySelectorAll","document","addEventListener","e","preventDefault","hidden","window","peelers","peelersOffsetTop","querySelector","offsetTop","peelersHeight","clientHeight","generatePotatoes","elapsedTime","potatoRow","createElement","dataset","bottom","innerHeight","innerWidth","numPotatoes","columns","i","randomIndex","length","potato","gridColumn","column","append","padStart","splice","prepend","end","duration","steps","stepValue","stepCount","transitionInterval","setInterval","clearInterval","numberTransition","currentTarget","target","classList","contains","getBoundingClientRect","top","play","add","parseInt","animation","console","log","scoreIncrementIndicator","textContent","changedTouches","clientY","left","clientX","clientWidth","setTimeout","clockwise","opacity","friesIncrementIndicator","element","startX","startY","endX","endY","controlX","controlY","startTime","animate","progress","currentX","quadraticBezier","currentY","requestAnimationFrame","control","t","pow","animateElementInArc","onanimationend","animationName","removeChild","onanimationstart","Number","step","elapsed","forEach","el","value","onClick","playing","ref","Head","name","content","rel","as","href","HowlerGlobal","this","init","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","err","canPlayType","mpegTest","ua","userAgent","checkOpera","match","isOldOpera","split","checkSafari","indexOf","safariVersion","isOldSafari","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","Promise","then","catch","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","handleSuspension","_resumeAfterSuspend","o","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","_seek","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","apply","fade","to","len","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","stepLen","lastTick","_fadeTo","tick","round","cancelScheduledValues","loopStart","loopEnd","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","index","remCache","cache","on","events","off","isId","keys","Object","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","g","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","DefaultContext","color","size","attr","IconContext","_excluded","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_extends","assign","hasOwnProperty","ownKeys","r","filter","getOwnPropertyDescriptor","enumerable","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","arg","input","hint","prim","Symbol","toPrimitive","res","TypeError","String","_toPrimitive","_toPropertyKey","configurable","writable","Tree2Element","tree","tag","child","GenIcon","props","IconBase","elem","conf","title","svgProps","computedSize","stroke","fill","strokeWidth","height","width","xmlns","children","Consumer"],"sourceRoot":""}